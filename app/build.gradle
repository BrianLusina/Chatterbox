apply plugin: "com.android.application"
apply plugin: 'kotlin-android'
// apply plugin: 'kotlin-kapt'
apply plugin: "io.fabric"

repositories {
    mavenCentral() // jcenter() works as well because it pulls from Maven Central
    flatDir {
        dirs "libs"
    }
    maven { url "https://maven.fabric.io/public" }
    mavenCentral()
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.chatterbox.chatterbox"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        multiDexEnabled true
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/NOTICE"
        exclude "META-INF/LICENSE"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }

        debug{
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    buildTypes.each {
        it.buildConfigField "String", "TWITTER_CONSUMER_KEY", TwitterConsumerKey
        it.buildConfigField "String", "TWITTER_SECRET", TwitterSecret
        it.buildConfigField "String", "FACEBOOK_APP_ID", FacebookAppId
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    
    // Android dependencies
    implementation "com.android.support.constraint:constraint-layout:$constaintLayoutVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:support-annotations:$supportLibVersion"
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"

    // kotlin manenos ;D
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.google.android.gms:play-services-auth:$googlePlayServices"

    // firebase dependencies
    implementation "com.google.firebase:firebase-auth:$firebaseVersion"
    implementation "com.google.firebase:firebase-database:$firebaseVersion"
    implementation "com.google.firebase:firebase-config:$firebaseVersion"
    implementation "com.google.android.gms:play-services-appinvite:$firebaseVersion"
    implementation "com.google.firebase:firebase-messaging:$firebaseVersion"
    implementation "com.google.android.gms:play-services-ads:$firebaseVersion"
    implementation "com.google.firebase:firebase-crash:$firebaseVersion"
    implementation "com.firebaseui:firebase-ui-database:$firebaseDbUiVersion"

    // 3rd party libraries

    // Dagger
    // dependency injection
    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"

    // view binding
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"
    // kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    implementation "com.facebook.android:facebook-android-sdk:$facebookSdkVersion"

    //Using Material Viewpager
    implementation ("com.github.florent37:materialviewpager:$materialViewPagerVersion"){
        transitive = true
    }

    //fab
    implementation "com.getbase:floatingactionbutton:$fabVersion"

    //MATERIAL DRAWER
    implementation("com.mikepenz:materialdrawer:$mikePenzDrawerVersion") {
        transitive = true
    }
    // about libraries
    implementation("com.mikepenz:aboutlibraries:$mikePenzAbtLibrariesVersion") {
        transitive = true
    }
    implementation "com.mikepenz:google-material-typeface:$mikePenzGoogleTypeface"
    implementation "com.mikepenz:fontawesome-typeface:$mikePenzFontAwesome"
    implementation "com.mikepenz:itemanimators:$mikePenzItemAnimators"
    implementation "com.mikepenz:crossfader:$mikePenzCrossFaderVersion"
    implementation "com.mikepenz:crossfadedrawerlayout:$mikePenzCrossFadedDrawer"

    // crashlytics
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion") {
        transitive = true
    }
    implementation("com.crashlytics.sdk.android:answers:$crashlyticsAnswersVersion") {
        transitive = true
    }
    implementation("com.twitter.sdk.android:twitter:$twitterSdkVersion") {
        transitive = true
    }
    // circle image view
    implementation "de.hdodenhof:circleimageview:$circleImageViewVersion"

    // glide version
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // super toasts
    implementation "com.github.johnpersano:supertoasts:$supertoastsVersion"

    // app intro
    implementation "com.github.paolorotolo:appintro:$appintroVersion"

    // custom activity on crash
    implementation "cat.ereza:customactivityoncrash:$customactivityoncrashVersion"

    // Testing dependencies

    // instrumented
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"

    // unit tests
    testImplementation "junit:junit:$jUnitVersion"
}

apply plugin: "com.google.gms.google-services"
